NOTE: -n is the --name flag, not a new flag

dotnet new sln -n PizzaStore
dotnet new console -n PizzaBox.Client
dotnet new classlib -n PizzaBox.Domain
mkdir PizzaBox.Domain/Abstracts
mkdir PizzaBox.Domain/Interfaces
mkdir PizzaBox.Domain/Models
dotnet new classlib -n PizzaBox.Storing
mkdir PizzaBox.Storing/Repositories
dotnet new xunit -n PizzaBox.Testing
mkdir PizzaBox.Testing/Tests
dotnet sln add **/*.csproj
dotnet add PizzaBox.Client/PizzaBox.Client.csproj reference PizzaBox.Domain/PizzaBox.Domain.csproj
dotnet add PizzaBox.Client/PizzaBox.Client.csproj reference PizzaBox.Storing/PizzaBox.Storing.csproj
dotnet add PizzaBox.Storing/PizzaBox.Storing.csproj reference PizzaBox.Domain/PizzaBox.Domain.csproj
dotnet add PizzaBox.Client/PizzaBox.Client.csproj package Microsoft.EntityFrameworkCore.Design
dotnet add PizzaBox.Client/PizzaBox.Client.csproj package Microsoft.EntityFrameworkCore.Sqlserver
dotnet add PizzaBox.Storing/PizzaBox.Storing.csproj package microsoft.entityframeworkcore // needed?
dotnet add PizzaBox.Storing/PizzaBox.Storing.csproj package microsoft.entityframeworkcore.sqlserver
dotnet add PizzaBox.Storing/PizzaBox.Storing.csproj package microsoft.entityframeworkcore.relational
dotnet-ef dbcontext scaffold -s PizzaBox.Client/PizzaBox.Client.csproj -p PizzaBox.Storing/PizzaBox.Storing.csproj 'server=localhost;database=PizzaProject;user id=sa;password=Passw0rd' microsoft.entityframeworkcore.sqlserver
dotnet run -p PizzaBox.Client/PizzaBox.Client.csproj